# Not completed. Follow https://confluence.eng.vmware.com/display/DECC/Deploying+your+own+Nginx-Ingress-Controller+on+DECC for completion.
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: docker-hello-world
  labels:
    app: docker-hello-world
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-hello-world
    spec:
      containers:
        - name: docker-hello-world
          image: scottsbaldwin/docker-hello-world:latest
          ports:
            - containerPort: 80
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hello-kube-deployment
  labels:
    app: hello-kube-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-kube-deployment
    spec:
      containers:
        - name: hello-again
          image: "gcr.io/google-samples/node-hello:1.0"
          env:
            - name: "PORT"
              value: "8080"

---
apiVersion: v1
kind: Service
metadata:
  name: docker-hello-world-svc
spec:
  selector:
    app: docker-hello-world
  ports:
    - port: 8088
      targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes
spec:
  type: ClusterIP
  selector:
    app: hello-kube-deployment
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-world-ing
  annotations:
    kubernetes.io/ingress.class: "nginx"  # because of this annotation only, ingress-nginx controller reads the configuration of this ingress only.
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: docker-hello-world-svc
              servicePort: 8088
          - path: /kube
            backend:
              serviceName: hello-kubernetes
              servicePort: 8080

