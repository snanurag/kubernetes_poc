# Not completed. Follow https://confluence.eng.vmware.com/display/DECC/Deploying+your+own+Nginx-Ingress-Controller+on+DECC for completion.
---
# Source: ingress-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: ingress-nginx
  annotations:
    service.beta.kubernetes.io/decc-load-balancer-https-backend-ports: "443"
    service.beta.kubernetes.io/decc-load-balancer-https-redirection-ports: "80:443"
    service.beta.kubernetes.io/decc-load-balancer-hostname: "iga.svc-stage.eng.vmware.com"
  labels:
    helm.sh/chart: ingress-nginx-2.0.3
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: ingress-nginx-controller
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: docker-hello-world
  labels:
    app: docker-hello-world
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-hello-world
    spec:
      containers:
        - name: docker-hello-world
          image: scottsbaldwin/docker-hello-world:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "100m"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hello-kube-deployment
  labels:
    app: hello-kube-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-kube-deployment
    spec:
      containers:
        - name: hello-again
          image: "gcr.io/google-samples/node-hello:1.0"
          env:
            - name: "PORT"
              value: "8080"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: docker-hello-world-svc
spec:
  selector:
    app: docker-hello-world
  ports:
    - port: 8088
      targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes
spec:
  type: ClusterIP
  selector:
    app: hello-kube-deployment
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-world-ing
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx-iga"  # because of this annotation only, ingress-nginx controller reads the configuration of this ingress only.
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: docker-hello-world-svc
              servicePort: 8088
          - path: /kube
            backend:
              serviceName: hello-kubernetes
              servicePort: 8080

